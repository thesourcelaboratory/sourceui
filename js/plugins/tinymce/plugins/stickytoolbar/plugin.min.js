tinymce.PluginManager.add('stickytoolbar', function(editor, url) {


	var container, toolbars, statusbar, scrolldefault;

	editor.on('init', function() {

		container = $(editor.editorContainer);
		toolbars = container.find('.mce-toolbar-grp');
		statusbar = container.find('.mce-statusbar');
		scrolldefault = container.closest('.scroll-default');
		sectortitle = container.closest('.sui-sector').children('.sui-sector-title');
		viewtoolbar = container.closest('.sui-view').children('.toolbar');

		scrolldefault.on('scroll', function() {
			setSticky();
		});
		setSticky();

	});

	function setSticky() {

		if (isSticky()) {

			$(container).css({
				paddingTop: toolbars.outerHeight()
			});

			if (isAtBottom()) {
				toolbars.css({
					top: 'auto',
					bottom: statusbar.outerHeight(),
					position: 'absolute',
					width: '100%'
				});
			} else {
				viewtoolbar.removeClass('shadowed');
				toolbars.addClass('shadowed').css({
					top: sectortitle.outerHeight() + viewtoolbar.outerHeight(),
					bottom: 'auto',
					position: 'fixed',
					width: container.width()
				});
			}
		} else {
			container.css({
				paddingTop: 0
			});
			toolbars.removeClass('shadowed').css({
				top: 'auto',
				position: 'relative',
				width: 'auto'
			});
		}
	}

	function isSticky() {
		var editorTop = editor.editorContainer.getBoundingClientRect().top - scrolldefault.offset().top;

		if (editorTop < 0) {
			return true;
		}

		return false;
	}

	function isAtBottom() {

		var editorTop = editor.editorContainer.getBoundingClientRect().top;

		var toolbarHeight = container.find('.mce-toolbar-grp').outerHeight();
		var footerHeight = container.find('.mce-statusbar').outerHeight();

		var hiddenHeight = -(container.outerHeight() - toolbarHeight - footerHeight);

		if (editorTop < hiddenHeight) {
			return true;
		}

		return false;
	}
});